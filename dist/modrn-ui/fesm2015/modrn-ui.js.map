{"version":3,"file":"modrn-ui.js","sources":["../../../projects/modrn-ui/src/lib/modrn-ui.service.ts","../../../projects/modrn-ui/src/lib/modrn-ui.component.ts","../../../projects/modrn-ui/src/lib/components/button.component.ts","../../../projects/modrn-ui/src/lib/components/checkbox.component.ts","../../../projects/modrn-ui/src/lib/components/form-field.component.ts","../../../projects/modrn-ui/src/lib/modrn-ui.module.ts","../../../projects/modrn-ui/src/public-api.ts","../../../projects/modrn-ui/src/modrn-ui.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModrnUiService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-modrn-ui',\n  template: `\n    <p>\n      modrn-ui works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class ModrnUiComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, EventEmitter, Input, OnInit, Output, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'modrn-button',\r\n  template: `\r\n    <button (click)=\"onClick($event)\" [class]=\"color\"><ng-content></ng-content></button>\r\n  `,\r\n  styles: [\r\n      'button {padding: 8px; border-radius: 20px; min-height: 36px; max-height: 42px; border: none; box-shadow: 0px 0px 6px -4px black; cursor: pointer}',\r\n      'button.default {color: black; background: white;}',\r\n      'button.primary {color: white; background: #00A67E;}',\r\n      'button.error {color: white; background: #d70000;}',\r\n      'button.default:active {color: black; background: #f2f2f2;}',\r\n      'button.primary:active {color: white; background: #004A39;}',\r\n      'button.error:active {color: white; background: #660000;}',\r\n      'button:focus {box-shadow: 0px 0px 6px -4px blue; outline: none !important;}'\r\n  ],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ButtonComponent implements OnInit {\r\n\r\n    @Input() color: 'primary' | 'default' | 'error' = 'default';\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    onClick(e: any) {\r\n        console.log('clicked')\r\n    }\r\n\r\n}\r\n","import { Component, EventEmitter, Input, OnInit, Output, ViewEncapsulation } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'modrn-button',\r\n  template: `\r\n    <label class=\"container\">\r\n        <ng-content></ng-content>\r\n        <input [formControl]=\"control\" type=\"checkbox\">\r\n        <span class=\"check\"></span>\r\n    </label>\r\n  `,\r\n  styles: [\r\n      `.container {\r\n        display: block;\r\n        position: relative;\r\n        padding-left: 35px;\r\n        margin-bottom: 12px;\r\n        cursor: pointer;\r\n        font-size: 22px;\r\n        -webkit-user-select: none;\r\n        -moz-user-select: none;\r\n        -ms-user-select: none;\r\n        user-select: none;\r\n      }`,\r\n      `.container input {\r\n        position: absolute;\r\n        opacity: 0;\r\n        cursor: pointer;\r\n        height: 0;\r\n        width: 0;\r\n      }`,\r\n      `.check {\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        height: 25px;\r\n        width: 25px;\r\n        background-color: #eee;\r\n      }`,\r\n      `.container:hover input ~ .check {\r\n        background-color: #ccc;\r\n      }`,\r\n      `.container input:checked ~ .check {\r\n        background-color: #2196F3;\r\n      }`,\r\n      `.checkmark:after {\r\n        content: \"\";\r\n        position: absolute;\r\n        display: none;\r\n      }`,\r\n      `.container input:checked ~ .check:after {\r\n        display: block;\r\n      }`,\r\n      `.container .check:after {\r\n        left: 9px;\r\n        top: 5px;\r\n        width: 5px;\r\n        height: 10px;\r\n        border: solid white;\r\n        border-width: 0 3px 3px 0;\r\n        -webkit-transform: rotate(45deg);\r\n        -ms-transform: rotate(45deg);\r\n        transform: rotate(45deg);\r\n      }`\r\n  ],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class CheckBoxComponent implements OnInit {\r\n\r\n    @Output() change = new EventEmitter()\r\n    control = new FormControl(false)\r\n    constructor() { }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n \r\n    onClick() {\r\n        this.change.emit(this.control.value)\r\n    }\r\n\r\n}\r\n","import { Component, Input, OnInit, Output } from '@angular/core';\r\nimport * as EventEmitter from 'events';\r\n\r\n@Component({\r\n  selector: 'modrn-form-field',\r\n  template: `\r\n    <div><ng-content></ng-content></div>\r\n  `,\r\n  styles: [\r\n     \r\n  ]\r\n})\r\nexport class FormFieldComponent implements OnInit {\r\n\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n}\r\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ButtonComponent } from './components/button.component';\nimport { CheckBoxComponent } from './components/checkbox.component';\nimport { FormFieldComponent } from './components/form-field.component';\nimport { ModrnUiComponent } from './modrn-ui.component';\n\n\n\n@NgModule({\n  declarations: [ModrnUiComponent, FormFieldComponent, ButtonComponent, CheckBoxComponent],\n  imports: [\n    CommonModule,\n  ],\n  exports: [ModrnUiComponent, FormFieldComponent, ButtonComponent, CheckBoxComponent]\n})\nexport class ModrnUiModule { }\n","/*\n * Public API Surface of modrn-ui\n */\n\nexport * from './lib/modrn-ui.service';\nexport * from './lib/modrn-ui.component';\nexport * from './lib/components/button.component';\nexport * from './lib/components/checkbox.component';\nexport * from './lib/components/form-field.component';\nexport * from './lib/modrn-ui.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["modrn_ui_component_1","form_field_component_1","button_component_1","checkbox_component_1"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAA2C;;AAE3C,MAGa,cAAc;IAEzB,iBAAiB;;AALnB,wCAMC;;;YANA,iBAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;ACJiD;AAElD,MAUa,gBAAgB;IAE3B,iBAAiB;IAEjB,QAAQ;KACP;;AAfH,4CAiBC;;YAjBA,gBAAS,SAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,QAAQ,EAAE;;;;GAIT;aAGF;;;;;;;;;;;;ACXiG;AAElG,MAiBa,eAAe;IAIxB;QAFS,UAAK,GAAoC,SAAS,CAAC;KAE3C;IAEjB,QAAQ;KACP;IAED,OAAO,CAAC,CAAM;QACV,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAA;KACzB;;AA5BL,0CA8BC;;YA9BA,gBAAS,SAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,QAAQ,EAAE;;GAET;gBAWD,aAAa,EAAE,wBAAiB,CAAC,IAAI;yBATjC,mJAAmJ;oBACnJ,mDAAmD;oBACnD,qDAAqD;oBACrD,mDAAmD;oBACnD,4DAA4D;oBAC5D,4DAA4D;oBAC5D,0DAA0D;oBAC1D,6EAA6E;aAGlF;;;;oBAGI,YAAK;;;;;;;;;;;ACrBwF;AACrD;AAE7C,MAiEa,iBAAiB;IAI1B;QAFU,WAAM,GAAG,IAAI,mBAAY,EAAE,CAAA;QACrC,YAAO,GAAG,IAAI,mBAAW,CAAC,KAAK,CAAC,CAAA;KACf;IAEjB,QAAQ;KACP;IAGD,OAAO;QACH,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAA;KACvC;;AA7EL,8CA+EC;;YA/EA,gBAAS,SAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,QAAQ,EAAE;;;;;;GAMT;gBAuDD,aAAa,EAAE,wBAAiB,CAAC,IAAI;yBArDjC;;;;;;;;;;;QAWE;oBACF;;;;;;QAME;oBACF;;;;;;;QAOE;oBACF;;QAEE;oBACF;;QAEE;oBACF;;;;QAIE;oBACF;;QAEE;oBACF;;;;;;;;;;QAUE;aAGP;;;;qBAGI,aAAM;;;;;;;;;;;ACtEsD;AAGjE,MASa,kBAAkB;IAG3B,iBAAiB;IAEjB,QAAQ;KACP;;AAfL,gDAiBC;;YAjBA,gBAAS,SAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,QAAQ,EAAE;;GAET;aAIF;;;;;;;;;;;;ACX8C;AACN;AAEuB;AACI;AACG;AACf;AAIxD,MAOa,aAAa;;AAP1B,sCAO8B;;YAP7B,eAAQ,SAAC;gBACR,YAAY,EAAE,CAACA,kCAAgB,EAAEC,sCAAkB,EAAEC,gCAAe,EAAEC,oCAAiB,CAAC;gBACxF,OAAO,EAAE;oBACP,qBAAY;iBACb;gBACD,OAAO,EAAE,CAACH,kCAAgB,EAAEC,sCAAkB,EAAEC,gCAAe,EAAEC,oCAAiB,CAAC;aACpF;;;;;;;;;AChBD;;;;;AAIA,+CAAuC;AACvC,iDAAyC;AACzC,gDAAkD;AAClD,kDAAoD;AACpD,mDAAsD;AACtD,8CAAsC;;;;;;;;ACTtC;;;;;AAIA,yCAA6B;;;;;;;;"}